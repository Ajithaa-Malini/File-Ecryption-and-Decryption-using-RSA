package pgp_algo;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author ponth
 */
class JavaFileFilter extends FileFilter{
        @Override
	public boolean accept(File file)
	{
		if(file.getName().endsWith(".txt")) return true;
		if(file.getName().endsWith(".java")) return true;
		if(file.isDirectory()) return true;
		return false;
	}
        @Override
	public String getDescription()
	{
		return "Java and Text file for Encryption and Dencryption";
	}
}

class SaveJavaFileFilter extends FileFilter
 {
    @Override
    public boolean accept(File f)
   {
        if (f.isDirectory())
        	return true;

         String s = f.getName();

        return s.endsWith(".java");
   }

    @Override
   public String getDescription()
  {
       return "*.java";
  }

}

class SaveTextFileFilter extends FileFilter
 {
    @Override
    public boolean accept(File f)
   {
        if (f.isDirectory())
        	return true;
         String s = f.getName();

        return s.endsWith(".txt");
   }

    @Override
   public String getDescription()
  {
       return "*.txt";
  }

}
public class UIDES extends javax.swing.JFrame {
    public UIDES() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private JLabel label;
    private JTextField filename;
    private File fileChoosen;
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        panelKey = new javax.swing.JPanel();
        dec = new javax.swing.JButton();
        enc = new javax.swing.JButton();
        browse = new javax.swing.JButton();
        file = new javax.swing.JPanel();
        filechooser = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CHOOSE A FILE");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(755, 135, -1, -1));

        panelKey.setLayout(new java.awt.GridLayout());

        dec.setBackground(new java.awt.Color(255, 0, 0));
        dec.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        dec.setForeground(new java.awt.Color(255, 255, 255));
        dec.setText("DECRYPT");
        dec.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        dec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decActionPerformed(evt);
            }
        });
        panelKey.add(dec);

        enc.setBackground(new java.awt.Color(255, 0, 51));
        enc.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        enc.setForeground(new java.awt.Color(255, 255, 255));
        enc.setText("ENCRYPT");
        enc.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelKey.add(enc);

        browse.setBackground(new java.awt.Color(255, 0, 51));
        browse.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        browse.setForeground(new java.awt.Color(255, 255, 255));
        browse.setText("BROWSE");
        browse.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseActionPerformed(evt);
            }
        });
        panelKey.add(browse);

        jPanel1.add(panelKey, new org.netbeans.lib.awtextra.AbsoluteConstraints(236, 254, 1261, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1683, -1));

        file.setBackground(new java.awt.Color(0, 0, 0));
        file.setLayout(new java.awt.BorderLayout());

        filechooser.setBackground(new java.awt.Color(0, 0, 0));
        filechooser.setForeground(new java.awt.Color(255, 255, 255));
        file.add(filechooser, java.awt.BorderLayout.CENTER);

        getContentPane().add(file, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 380, 630, 410));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void decActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decActionPerformed
        // TODO add your handling code here:
    FileInputStream fin;
        try {
            fin = new FileInputStream(fileChoosen);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(UIDES.class.getName()).log(Level.SEVERE, null, ex);
        }
    //byte[] fi=fin.readAllBytes();
        try {
       //     error.decrypt(Arrays.toString(fi));
        } catch (Exception ex) {
            Logger.getLogger(UIDES.class.getName()).log(Level.SEVERE, null, ex);
        }
    JOptionPane.showMessageDialog(null,"Save the Decrypted file","DECRYPTION COMPLETED",JOptionPane.INFORMATION_MESSAGE);

        
    }//GEN-LAST:event_decActionPerformed

    private void browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseActionPerformed
        // TODO add your handling code here:
        int result = filechooser.showOpenDialog(null);
    		 	if(result==JFileChooser.APPROVE_OPTION)
    		 	{
    		 		label.setText("Selected file is : "+filechooser.getSelectedFile().getName());
    		 		filename.setText(filechooser.getSelectedFile().getPath());
    		 		fileChoosen=filechooser.getSelectedFile();
    		 		dec.setEnabled(true);
    		 		enc.setEnabled(true);
    		 	}
    		 	else
    		 	{
    		 		filename.setText("No file selected");
    		 		dec.setEnabled(false);
    		 		enc.setEnabled(false);
    		 	}
    }//GEN-LAST:event_browseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UIDES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UIDES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UIDES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UIDES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UIDES().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browse;
    private javax.swing.JButton dec;
    private javax.swing.JButton enc;
    private javax.swing.JPanel file;
    private javax.swing.JFileChooser filechooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel panelKey;
    // End of variables declaration//GEN-END:variables
}
